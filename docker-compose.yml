version: "3.9"

services:

  web-public-night-planet:
    container_name: web-public-night-planet
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    ports:
      - 8080:80
    networks:
      - night-planet-network
    tty: true
    depends_on:
      - app-public-night-planet
    volumes:
      - .:/var/www/html
    environment:
      - VIRTUAL_HOST=${APP_URL}

  web-admin-night-planet:
    container_name: web-admin-night-planet
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    ports:
      - 8081:80
    networks:
      - night-planet-network
    tty: true
    depends_on:
      - app-admin-night-planet
    volumes:
      - .:/var/www/html
    environment:
      - VIRTUAL_HOST=${APP_ADMIN_URL}

  # nginx:
  #   container_name: nginx
  #   build:
  #     context: .
  #     dockerfile: ./docker/web/Dockerfile
  #   ports:
  #     - 80:80
  #   volumes:
  #     - .:/var/www/html
  #   tty: true
  #   depends_on:
  #     - app-public-night-planet
  #     - app-admin-night-planet

  nginx-proxy:
    container_name: nginx-night-planet
    hostname: nginx-proxy
    image: jwilder/nginx-proxy:latest
    restart: always
    ports:
      - '80:80'
      - '443:443'
    networks:
      - night-planet-network
    tty: true
    depends_on:
      - web-public-night-planet
      - web-admin-night-planet
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  app-public-night-planet:
    container_name: app-public-night-planet
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    volumes:
      - ./:/var/www/html
    expose:
      - 9000
    networks:
      - night-planet-network
    tty: true
    depends_on:
      - db-night-planet
    environment:
      - VIRTUAL_HOST=${APP_URL}

  app-admin-night-planet:
    container_name: app-admin-night-planet
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    volumes:
      - ./:/var/www/html
    expose:
      - 9000
    networks:
      - night-planet-network
    tty: true
    depends_on:
      - db-night-planet
    environment:
      - VIRTUAL_HOST=${APP_ADMIN_URL}

  cron-night-planet:
    container_name: cron-night-planet
    build:
      context: .
      dockerfile: ./docker/cron/Dockerfile
    volumes:
      - ./:/var/www/html
    expose:
      - 9000
    networks:
      - night-planet-network
    tty: true
    depends_on:
      - db-night-planet

  db-night-planet:
    container_name: db-night-planet
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    ports:
      - 13306:3306
      - 13060:33060
    networks:
      - night-planet-network
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      TZ: 'Asia/Tokyo'
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql-volume:/var/lib/mysql
      - ./docker/db/initdb:/docker-entrypoint-initdb.d

  # メールサーバー http://night-planet.local:8025
  mail-hog-night-planet:
    container_name: mail-hog-night-planet
    image: mailhog/mailhog
    ports:
      - "8025:8025"
    networks:
      - night-planet-network
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /tmp
    volumes:
      - maildir:/tmp

  # S3と互換性あるファイルサーバー
  minio-night-planet:
    container_name: minio-night-planet
    image: minio/minio:RELEASE.2021-06-17T00-10-46Z
    ports:
      - "9090:9000"
    networks:
      - night-planet-network
    environment:
      - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
      - MINIO_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
    entrypoint: sh
    command: -c "
      mkdir -p /data/.minio.sys/buckets;
      cp -r /policies/* /data/.minio.sys/;
      cp -r /export/* /data/;
      /usr/bin/minio server /data;"
    volumes:
      - ./docker/minio/data:/data
      - ./docker/minio/export:/export
      - ./docker/minio/config:/root/.minio
      - ./docker/minio/policies:/policies

networks:
  night-planet-network:
    external: true

volumes:
  mysql-volume:
  maildir: {}
  minio: